@import url("https://fonts.googleapis.com/css?family=Poppins:400|Open+Sans:400");

:root {
  /** Define colors as colors */
  --white: #fffffe;
  --lightBlue: #3da9fc;
  --darkBlue: #094067;
  --lightGray: #90b4ce;
  --darkGray: #5f6c7b;
  --red: #ef4565;

  /** Define colors intentions */
  --background: var(--white);
  --headerBackground: var(--darkBlue);
  --footerBackground: var(--lightGray);
  --buttonTextColor: var(--white);
  --cardBg: var(--lightGray);
  --textColor: var(--darkGray);
  --lineColor: var(--darkBlue);
  --primary: var(--lightBlue);
  --danger: var(--red);

  /** Styles */
  --line: solid 1px var(--lineColor);

  /** Type */
  --headingFont: "Poppins", sans-serif;
  --bodyFont: "Open Sans", sans-serif;
  --baseFontSize: 100%;
  --h1: 3.052em;
  --h2: 2.441em;
  --h3: 1.953em;
  --h4: 1.563em;
  --h5: 1.25em;
  --smallText: 0.8em;

  /** Elevation */
  --level-1: 0 1px 3px 0 rgba(0, 0, 0, 0.1), 0 1px 2px 0 rgba(0, 0, 0, 0.06);
  --level-2: 0 4px 6px -1px rgba(0, 0, 0, 0.1),
    0 2px 4px -1px rgba(0, 0, 0, 0.06);
  --level-3: 0 10px 15px -3px rgba(0, 0, 0, 0.1),
    0 4px 6px -2px rgba(0, 0, 0, 0.05);
  --level-4: 0 20px 25px -5px rgba(0, 0, 0, 0.1),
    0 10px 10px -5px rgba(0, 0, 0, 0.04);

  /** Positioning */
  /*? You can think of the 2.5% padding as 95% width */
  --containerPadding: 2.5%;
  --headerHeight: 4rem;
  --borderRadius: 10px;
}

/*? ***********************************************/
/** From type-scale.com ***************************/
/*? ***********************************************/
html {
  font-size: var(--baseFontSize);
  box-sizing: border-box;
} /*18px*/

*,
*::before,
*::after {
  box-sizing: inherit;
}

body {
  font-family: var(--bodyFont);
  font-weight: 400;
  line-height: 1.65;
  background: var(--background);
  color: var(--textColor);
}

p {
  margin-bottom: 1.15rem;
  max-width: 40em;
}

p a,
blockquote a {
  color: var(--textColor);
  text-decoration: none;
  border-bottom: solid 2px var(--primary);
}

h1,
h2,
h3,
h4,
h5 {
  margin: 2.75rem 0 1.05rem;
  font-family: var(--headingFont);
  font-weight: 400;
  line-height: 1.15;
}

h1 {
  margin-top: 0;
  font-size: var(--h1);
}

h2 {
  font-size: var(--h2);
}

h3 {
  font-size: var(--h3);
}

h4 {
  font-size: var(--h4);
}

h5 {
  font-size: var(--h5);
}

small,
.text_small {
  font-size: var(--smallText);
}

/*? ***********************************************/
/** -- END type-scale.com *************************/
/*? ***********************************************/

blockquote {
  margin: 10px;
  padding: 2em;
  background: var(--cardBg);
  box-shadow: var(--level-3);
}

button {
  appearance: none;
  color: var(--buttonTextColor);
  background-color: var(--buttonBackground);
  border: none;
  border-radius: 10px;
  padding: 5px 25px;
  box-shadow: var(--level-1);
  transition: 0.3s ease-in-out box-shadow;
}

button {
  --buttonColor: var(--primary);
  appearance: none;
  color: var(--buttonTextColor);
  background-color: var(--buttonColor);
  border: none;
  border-radius: 10px;
  padding: 5px 25px;
  box-shadow: var(--level-1);
  transition: 0.3s ease-in-out box-shadow;
}

button:hover {
  box-shadow: var(--level-2);
}

button[disabled] {
  opacity: 0.4;
}

/** .cancel class can mean anything (broad) */
/** We make it apply only to buttons */
button.cancel {
  --buttonColor: var(--danger);
}

button.small {
  font-size: var(--smallText);
}

hr {
  border-top: var(--line);
}

header {
  background: var(--headerBackground);
  color: var(--white);
  position: fixed;
  left: 0;
  top: 0;
  width: 100%;
  height: var(--headerHeight);
  box-shadow: var(--level-2);
  display: flex;
  flex-direction: column;
  flex-wrap: nowrap;
  justify-content: flex-start;
  padding: 0.5rem var(--containerPadding);
}

#sub-header {
  background: var(--lightBlue);
  padding-top: 100px;

  /* position: relative;
  left: 0;
  top: 0;
  width: 100%; */
}

header p {
  color: var(--lightBlue);
  font-size: var(--smallText);
}

/* header nav {
  align-self: flex-end;
} */

header nav a {
  color: var(--lightGray);
  text-decoration: none;
}

header nav a:hover {
  border-bottom: solid 2px var(--primary);
}

/** Give a margin to everything but the first nav link */
header nav a + a {
  margin-left: 10px;
}

footer {
  --footerTextColor: var(--white);
  background: var(--footerBackground);
  color: var(--footerTextColor);
  padding: 2rem var(--containerPadding);
  text-align: center;
}

footer a {
  color: var(--footerTextColor);
}

footer p {
  margin-bottom: 0;
  max-width: none;
}

label {
  display: block;
  font-size: var(--smallText);
}

input,
textarea {
  padding: 4px 5px;
  border: var(--line);
  border-radius: 4px;
}

textarea {
  width: 100%;
  height: 5rem;
}

select {
  border: var(--line);
}

::placeholder {
  color: var(--darkGray);
}

.logo {
  font-size: var(--baseFontSize);
  margin: 0;
}

.layout {
  /** top padding = header height plus whatever visual padding we want */
  /** in other words, because the margin is 3rem tall, it's taking up the 3rem of padding we already have, */
  /** which gives the illusion of having no padding */
  padding: calc(1rem + var(--headerHeight)) var(--containerPadding);
}

.grid {
  --gridCols: 2;
  display: grid;
  grid-template-columns: repeat(var(--gridCols), 1fr);
  grid-gap: 20px;
}

.cols-3 {
  --gridCols: 3;
}

.flex {
  --justifyContent: space-between;
  display: block;
  justify-content: var(--justifyContent);
}

.flex-around {
  --justifyContent: space-around;
}

.split {
  display: flex;
  flex-direction: column;
  grid-template-columns: 20% 80%;
  grid-gap: 20px;
}

.grid--split {
  grid-template-columns: 33% 67%;
  grid-gap: 20px;
}

.card {
  padding: 2em;
  color: var(--darkBlue);
  background: var(--cardBg);
  box-shadow: var(--level-3);
  border-radius: var(--borderRadius);
}

.card img {
  max-width: 100%;
  /* min-height: 50%; */
  max-height: 100%;
}

/** Anything that is an immediate descendant of card */
/*? First item will never have margin-top */

.card > *:first-child {
  margin-top: 0;
}

/*? Last item will never have margin-bottom */
.card > *:last-child {
  margin-top: 0;
}

@media only screen and (min-width: 500px) {
  :root {
    --baseFontSize: 112.5%;
  }

  .grid,
  .split {
    display: grid;
  }

  .flex {
    display: flex;
  }

  .card img {
    max-width: 100%;
    max-height: 100%;
  }
}
